<?xml version="1.0"?><xliff version="1.2" xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd"><file datatype="xml" original="security.md" source-language="en-US" target-language="en-US"><header><tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-0c45fb3" tool-company="Microsoft" /><xliffext:skl_file_name xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">9e8b99b7-5dd1-4f94-ba72-fb306822a13cf2e2d696a09e5b5bb321da583efd76f580759ce6.skl</xliffext:skl_file_name><xliffext:version xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1.2</xliffext:version><xliffext:ms.openlocfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">f2e2d696a09e5b5bb321da583efd76f580759ce6</xliffext:ms.openlocfilehash><xliffext:ms.sourcegitcommit xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">9e8b99b7-5dd1-4f94-ba72-fb306822a13c</xliffext:ms.sourcegitcommit><xliffext:ms.lasthandoff xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">02/27/2020</xliffext:ms.lasthandoff><xliffext:ms.openlocfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">docs\advanced-analytics\concepts\security.md</xliffext:ms.openlocfilepath></header><body><group id="content" extype="content"><trans-unit id="101" translate="yes" xml:space="preserve" restype="x-metadata">
          <source>Security overview for extensibility</source>
        </trans-unit><trans-unit id="102" translate="yes" xml:space="preserve" restype="x-metadata">
          <source>Security overview for the extensibility framework in SQL Server Machine Learning Services.</source>
        </trans-unit><trans-unit id="103" translate="yes" xml:space="preserve" restype="x-metadata">
          <source>Security for login and user accounts, SQL Server Launchpad service, worker accounts, running multiple scripts, and file permissions.</source>
        </trans-unit><trans-unit id="104" translate="yes" xml:space="preserve">
          <source>Security overview for the extensibility framework in SQL Server Machine Learning Services</source>
        </trans-unit><trans-unit id="105" translate="yes" xml:space="preserve">
          <source>This article describes the overall security architecture that is used to integrate the SQL Server database engine and related components with the extensibility framework.</source>
        </trans-unit><trans-unit id="106" translate="yes" xml:space="preserve">
          <source>It examines the securables, services, process identity, and permissions.</source>
        </trans-unit><trans-unit id="107" translate="yes" xml:space="preserve">
          <source>For more information about the key concepts and components of extensibility in SQL Server, see <bpt id="p1">[</bpt>Extensibility architecture in SQL Server Machine Learning Services<ept id="p1">](extensibility-framework.md)</ept>].</source>
        </trans-unit><trans-unit id="108" translate="yes" xml:space="preserve">
          <source>Securables for external script</source>
        </trans-unit><trans-unit id="109" translate="yes" xml:space="preserve">
          <source>An external script written in R or Python is submitted as an input parameter to a <bpt id="p1">[</bpt>system stored procedure<ept id="p1">](../../relational-databases/system-stored-procedures/sp-execute-external-script-transact-sql.md)</ept> created for this purpose, or is wrapped in a stored procedure that you define.</source>
        </trans-unit><trans-unit id="110" translate="yes" xml:space="preserve">
          <source>Alternatively, you might have models that are pretrained and stored in a binary format in a database table, callable in a T-SQL <bpt id="p1">[</bpt>PREDICT<ept id="p1">](../../t-sql/queries/predict-transact-sql.md)</ept> function.</source>
        </trans-unit><trans-unit id="111" translate="yes" xml:space="preserve">
          <source>As the script is provided through existing database schema objects, stored procedures and tables, there are no new <bpt id="p1">[</bpt>securables<ept id="p1">](../../relational-databases/security/securables.md)</ept> for SQL Server Machine Learning Services.</source>
        </trans-unit><trans-unit id="112" translate="yes" xml:space="preserve">
          <source>Regardless of how you are using script or, what they consist of, database objects will be created and probably saved, but no new object type is introduced for storing script.</source>
        </trans-unit><trans-unit id="113" translate="yes" xml:space="preserve">
          <source>As a result, the ability to consume, create, and save database objects depends largely on database permissions already defined for your users.</source>
        </trans-unit><trans-unit id="114" translate="yes" xml:space="preserve">
          <source>Permissions</source>
        </trans-unit><trans-unit id="115" translate="yes" xml:space="preserve">
          <source>SQL Server's data security model of database logins and roles extend to R and Python script.</source>
        </trans-unit><trans-unit id="116" translate="yes" xml:space="preserve">
          <source>A SQL Server login or Windows user account is required to run external scripts that use SQL Server data or that run with SQL Server as the compute context.</source>
        </trans-unit><trans-unit id="117" translate="yes" xml:space="preserve">
          <source>Database users having permissions to execute an ad hoc query can access the same data from R or Python script.</source>
        </trans-unit><trans-unit id="118" translate="yes" xml:space="preserve">
          <source>The login or user account identifies the <bpt id="p1">*</bpt>security principal<ept id="p1">*</ept>, who might need multiple levels of access, depending on the external script requirements:</source>
        </trans-unit><trans-unit id="119" translate="yes" xml:space="preserve">
          <source>Permission to access the database where external scripts are enabled.</source>
        </trans-unit><trans-unit id="120" translate="yes" xml:space="preserve">
          <source>Permissions to read data from secured objects such as tables.</source>
        </trans-unit><trans-unit id="121" translate="yes" xml:space="preserve">
          <source>The ability to write new data to a table, such as a model, or scoring results.</source>
        </trans-unit><trans-unit id="122" translate="yes" xml:space="preserve">
          <source>The ability to create new objects, such as tables, stored procedures that use the external script, or custom functions that use R or Python job.</source>
        </trans-unit><trans-unit id="123" translate="yes" xml:space="preserve">
          <source>The right to install new packages on the SQL Server computer, or use packages provided to a group of users.</source>
        </trans-unit><trans-unit id="124" translate="yes" xml:space="preserve">
          <source>Each person who runs an external script using SQL Server as the execution context must be mapped to a user in the database.</source>
        </trans-unit><trans-unit id="125" translate="yes" xml:space="preserve">
          <source>Rather than individually set database user permissions, you could create roles to manage sets of permissions, and assign users to those roles, rather than individually set user permissions.</source>
        </trans-unit><trans-unit id="126" translate="yes" xml:space="preserve">
          <source>For more information, see <bpt id="p1">[</bpt>Give users permission to SQL Server Machine Learning Services<ept id="p1">](../../advanced-analytics/security/user-permission.md)</ept>.</source>
        </trans-unit><trans-unit id="127" translate="yes" xml:space="preserve">
          <source>Permissions when using an external client tool</source>
        </trans-unit><trans-unit id="128" translate="yes" xml:space="preserve">
          <source>Users who are using R or Python in an external client tool must have their login or account mapped to a user in the database if they need to run an external script in-database, or access database objects and data.</source>
        </trans-unit><trans-unit id="129" translate="yes" xml:space="preserve">
          <source>The same permissions are required whether the external script is sent from a remote data science client or run using a T-SQL stored procedure.</source>
        </trans-unit><trans-unit id="130" translate="yes" xml:space="preserve">
          <source>For example, assume that you created an external script that runs on your local computer, and you want to run that script on SQL Server.</source>
        </trans-unit><trans-unit id="131" translate="yes" xml:space="preserve">
          <source>You must ensure that the following conditions are met:</source>
        </trans-unit><trans-unit id="132" translate="yes" xml:space="preserve">
          <source>The database allows remote connections.</source>
        </trans-unit><trans-unit id="133" translate="yes" xml:space="preserve">
          <source>The SQL login or Windows account that you used for database access has been added to the SQL Server at the instance level.</source>
        </trans-unit><trans-unit id="134" translate="yes" xml:space="preserve">
          <source>The SQL login or Windows user must have the permission to execute external scripts.</source>
        </trans-unit><trans-unit id="135" translate="yes" xml:space="preserve">
          <source>Generally, this permission can only be added by a database administrator.</source>
        </trans-unit><trans-unit id="136" translate="yes" xml:space="preserve">
          <source>The SQL login or Window user must be added as a user, with appropriate permissions, in each database where the external script performs any of these operations:</source>
        </trans-unit><trans-unit id="137" translate="yes" xml:space="preserve">
          <source>Retrieving data.</source>
        </trans-unit><trans-unit id="138" translate="yes" xml:space="preserve">
          <source>Writing or updating data.</source>
        </trans-unit><trans-unit id="139" translate="yes" xml:space="preserve">
          <source>Creating new objects, such as tables or stored procedures.</source>
        </trans-unit><trans-unit id="140" translate="yes" xml:space="preserve">
          <source>After the login or Windows user account has been provisioned and given the necessary permissions, you can run an external script on SQL Server by using a data source object in R or the <bpt id="p1">**</bpt>revoscalepy<ept id="p1">**</ept> library in Python, or by calling a stored procedure that contains the external script.</source>
        </trans-unit><trans-unit id="141" translate="yes" xml:space="preserve">
          <source>Whenever an external script is launched from SQL Server, the database engine security gets the security context of the user who started the job, and manages the mappings of the user or login to securable objects.</source>
        </trans-unit><trans-unit id="142" translate="yes" xml:space="preserve">
          <source>Therefore, all external scripts that are initiated from a remote client must specify the login or user information as part of the connection string.</source>
        </trans-unit><trans-unit id="143" translate="yes" xml:space="preserve">
          <source>Services used in external processing (Launchpad)</source>
        </trans-unit><trans-unit id="144" translate="yes" xml:space="preserve">
          <source>The extensibility framework adds one new NT service to the <bpt id="p1">[</bpt>list of services<ept id="p1">](../../database-engine/configure-windows/configure-windows-service-accounts-and-permissions.md#Service_Details)</ept> in a SQL Server installation: <bpt id="p2">[</bpt><bpt id="p3">**</bpt>SQL Server Launchpad (MSSSQLSERVER)<ept id="p3">**</ept><ept id="p2">](extensibility-framework.md#launchpad)</ept>.</source>
        </trans-unit><trans-unit id="145" translate="yes" xml:space="preserve">
          <source>The database engine uses the SQL Server Launchpad service to instantiate an R or Python session as a separate process.</source>
        </trans-unit><trans-unit id="146" translate="yes" xml:space="preserve">
          <source>The process runs under a low-privilege account; distinct from SQL Server, Launchpad itself, and the user identity under which the stored procedure or host query was executed.</source>
        </trans-unit><trans-unit id="147" translate="yes" xml:space="preserve">
          <source>Running script in a separate process, under low-privilege account, is the basis of the security and isolation model for R and Python in SQL Server.</source>
        </trans-unit><trans-unit id="148" translate="yes" xml:space="preserve">
          <source>In addition to launching external processes, Launchpad is also responsible for tracking the identity of the calling user, and mapping that identity to the low-privilege worker account used to start the process.</source>
        </trans-unit><trans-unit id="149" translate="yes" xml:space="preserve">
          <source>In some scenarios, where script or code calls back to SQL Server for data and operations, Launchpad is usually able to manage identity transfer seamlessly.</source>
        </trans-unit><trans-unit id="150" translate="yes" xml:space="preserve">
          <source>Script containing SELECT statements or calling functions and other programming objects will typically succeed if the calling user has sufficient permissions.</source>
        </trans-unit><trans-unit id="151" translate="yes" xml:space="preserve">
          <source>By default, <ph id="ph1">[!INCLUDE[rsql_launchpad_md](../../includes/rsql-launchpad-md.md)]</ph> is configured to run under <bpt id="p1">**</bpt>NT Service\MSSQLLaunchpad<ept id="p1">**</ept>, which is provisioned with all necessary permissions to run external scripts.</source>
        </trans-unit><trans-unit id="152" translate="yes" xml:space="preserve">
          <source>For more information about configurable options, see <bpt id="p1">[</bpt>SQL Server Launchpad service configuration<ept id="p1">](../security/sql-server-launchpad-service-account.md)</ept>.</source>
        </trans-unit><trans-unit id="153" translate="yes" xml:space="preserve">
          <source>Identities used in processing (SQLRUserGroup)</source>
        </trans-unit><trans-unit id="154" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>SQLRUserGroup<ept id="p1">**</ept> (SQL restricted user group) is created by SQL Server Setup and contains a pool of low-privilege local Windows user accounts.</source>
        </trans-unit><trans-unit id="155" translate="yes" xml:space="preserve">
          <source>When an external process is needed, Launchpad takes an available worker account and uses it to run a process.</source>
        </trans-unit><trans-unit id="156" translate="yes" xml:space="preserve">
          <source>More specifically, Launchpad activates an available worker account, maps it to the identity of the calling user, and runs the script under the worker account.</source>
        </trans-unit><trans-unit id="157" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>SQLRUserGroup<ept id="p1">**</ept> is linked to a specific instance.</source>
        </trans-unit><trans-unit id="158" translate="yes" xml:space="preserve">
          <source>A separate pool of worker accounts is needed for each instance on which machine learning has been enabled.</source>
        </trans-unit><trans-unit id="159" translate="yes" xml:space="preserve">
          <source>Accounts cannot be shared between instances.</source>
        </trans-unit><trans-unit id="160" translate="yes" xml:space="preserve">
          <source>The size of the user account pool is static and the default value is 20, which supports 20 concurrent sessions.</source>
        </trans-unit><trans-unit id="161" translate="yes" xml:space="preserve">
          <source>The number of external runtime sessions that can be launched simultaneously is limited by the size of this user account pool.</source>
        </trans-unit><trans-unit id="162" translate="yes" xml:space="preserve">
          <source>Worker account names in the pool are of the format SQLInstanceName<bpt id="p1">*</bpt>nn<ept id="p1">*</ept>.</source>
        </trans-unit><trans-unit id="163" translate="yes" xml:space="preserve">
          <source>For example, on a default instance, <bpt id="p1">**</bpt>SQLRUserGroup<ept id="p1">**</ept> contains accounts named MSSQLSERVER01, MSSQLSERVER02, and so forth on up to MSSQLSERVER20.</source>
        </trans-unit><trans-unit id="164" translate="yes" xml:space="preserve">
          <source>Parallelized tasks do not consume additional accounts.</source>
        </trans-unit><trans-unit id="165" translate="yes" xml:space="preserve">
          <source>For example, if a user runs a scoring task that uses parallel processing, the same worker account is reused for all threads.</source>
        </trans-unit><trans-unit id="166" translate="yes" xml:space="preserve">
          <source>If you intend to make heavy use of machine learning, you can increase the number of accounts used to run external scripts.</source>
        </trans-unit><trans-unit id="167" translate="yes" xml:space="preserve">
          <source>For more information, see <bpt id="p1">[</bpt>Modify the user account pool for machine learning<ept id="p1">](../../advanced-analytics/administration/modify-user-account-pool.md)</ept>.</source>
        </trans-unit><trans-unit id="168" translate="yes" xml:space="preserve" moniker-range="&gt;=sql-server-ver15||=sqlallproducts-allversions">
          <source>AppContainer isolation in SQL Server 2019</source>
        </trans-unit><trans-unit id="169" translate="yes" xml:space="preserve" moniker-range="&gt;=sql-server-ver15||=sqlallproducts-allversions">
          <source>In SQL Server 2019, Setup no longer creates worker accounts for <bpt id="p1">**</bpt>SQLRUserGroup<ept id="p1">**</ept>.</source>
        </trans-unit><trans-unit id="170" translate="yes" xml:space="preserve" moniker-range="&gt;=sql-server-ver15||=sqlallproducts-allversions">
          <source>Instead, isolation is achieved through <bpt id="p1">[</bpt>AppContainers<ept id="p1">](https://docs.microsoft.com/windows/desktop/secauthz/appcontainer-isolation)</ept>.</source>
        </trans-unit><trans-unit id="171" translate="yes" xml:space="preserve" moniker-range="&gt;=sql-server-ver15||=sqlallproducts-allversions">
          <source>At run time, when an external script is detected in a stored procedure or query, SQL Server calls Launchpad with a request for an extension-specific launcher.</source>
        </trans-unit><trans-unit id="172" translate="yes" xml:space="preserve" moniker-range="&gt;=sql-server-ver15||=sqlallproducts-allversions">
          <source>Launchpad invokes the appropriate runtime environment in a process under its identity, and instantiates an AppContainer to contain it.</source>
        </trans-unit><trans-unit id="173" translate="yes" xml:space="preserve" moniker-range="&gt;=sql-server-ver15||=sqlallproducts-allversions">
          <source>This change is beneficial because local account and password management is no longer required.</source>
        </trans-unit><trans-unit id="174" translate="yes" xml:space="preserve" moniker-range="&gt;=sql-server-ver15||=sqlallproducts-allversions">
          <source>Also, on installations where local user accounts are prohibited, elimination of the local user account dependency means you can now use this feature.</source>
        </trans-unit><trans-unit id="175" translate="yes" xml:space="preserve" moniker-range="&gt;=sql-server-ver15||=sqlallproducts-allversions">
          <source>As implemented by SQL Server, AppContainers are an internal mechanism.</source>
        </trans-unit><trans-unit id="176" translate="yes" xml:space="preserve" moniker-range="&gt;=sql-server-ver15||=sqlallproducts-allversions">
          <source>While you won't see physical evidence of AppContainers in Process Monitor, you can find them in outbound firewall rules created by Setup to prevent processes from making network calls.</source>
        </trans-unit><trans-unit id="177" translate="yes" xml:space="preserve" moniker-range="&gt;=sql-server-ver15||=sqlallproducts-allversions">
          <source>For more information, see <bpt id="p1">[</bpt>Firewall configuration for SQL Server Machine Learning Services<ept id="p1">](../../advanced-analytics/security/firewall-configuration.md)</ept>.</source>
        </trans-unit><trans-unit id="178" translate="yes" xml:space="preserve" moniker-range="&gt;=sql-server-ver15||=sqlallproducts-allversions">
          <source>In SQL Server 2019, <bpt id="p1">**</bpt>SQLRUserGroup<ept id="p1">**</ept> only has one member which is now the single SQL Server Launchpad service account instead of multiple worker accounts.</source>
        </trans-unit><trans-unit id="179" translate="yes" xml:space="preserve">
          <source>Permissions granted to SQLRUserGroup</source>
        </trans-unit><trans-unit id="180" translate="yes" xml:space="preserve">
          <source>By default, members of <bpt id="p1">**</bpt>SQLRUserGroup<ept id="p1">**</ept> have read and execute permissions on files in the SQL Server <bpt id="p2">**</bpt>Binn<ept id="p2">**</ept>, <bpt id="p3">**</bpt>R_SERVICES<ept id="p3">**</ept>, and <bpt id="p4">**</bpt>PYTHON_SERVICES<ept id="p4">**</ept> directories, with access to executables, libraries, and built-in datasets in the R and Python distributions installed with SQL Server.</source>
        </trans-unit><trans-unit id="181" translate="yes" xml:space="preserve">
          <source>To protect sensitive resources on SQL Server, you can optionally define an access control list (ACL) that denies access to <bpt id="p1">**</bpt>SQLRUserGroup<ept id="p1">**</ept>.</source>
        </trans-unit><trans-unit id="182" translate="yes" xml:space="preserve">
          <source>Conversely, you could also grant permissions to local data resources that exist on host computer, apart from SQL Server itself.</source>
        </trans-unit><trans-unit id="183" translate="yes" xml:space="preserve">
          <source>By design, <bpt id="p1">**</bpt>SQLRUserGroup<ept id="p1">**</ept> does not have a database login or permissions to any data.</source>
        </trans-unit><trans-unit id="184" translate="yes" xml:space="preserve">
          <source>Under certain circumstances, you might want to create a login to allow loop back connections, particularly when a trusted Windows identity is the calling user.</source>
        </trans-unit><trans-unit id="185" translate="yes" xml:space="preserve">
          <source>This capability is called <bpt id="p1">[</bpt><bpt id="p2">*</bpt>implied authentication<ept id="p2">*</ept><ept id="p1">](#implied-authentication)</ept>.</source>
        </trans-unit><trans-unit id="186" translate="yes" xml:space="preserve">
          <source>For more information, see <bpt id="p1">[</bpt>Add SQLRUserGroup as a database user<ept id="p1">](../../advanced-analytics/security/create-a-login-for-sqlrusergroup.md)</ept>.</source>
        </trans-unit><trans-unit id="187" translate="yes" xml:space="preserve">
          <source>Identity mapping</source>
        </trans-unit><trans-unit id="188" translate="yes" xml:space="preserve">
          <source>When a session is started, Launchpad maps the identity of the calling user to a worker account.</source>
        </trans-unit><trans-unit id="189" translate="yes" xml:space="preserve">
          <source>The mapping of an external Windows user or valid SQL login to a worker account is valid only for the lifetime of the SQL stored procedure that executes the external script.</source>
        </trans-unit><trans-unit id="190" translate="yes" xml:space="preserve">
          <source>Parallel queries from the same login are mapped to the same user worker account.</source>
        </trans-unit><trans-unit id="191" translate="yes" xml:space="preserve">
          <source>During execution, Launchpad creates temporary folders to store session data, deleting them when the session concludes.</source>
        </trans-unit><trans-unit id="192" translate="yes" xml:space="preserve">
          <source>The directories are access-restricted.</source>
        </trans-unit><trans-unit id="193" translate="yes" xml:space="preserve">
          <source>For R, RLauncher performs this task.</source>
        </trans-unit><trans-unit id="194" translate="yes" xml:space="preserve">
          <source>For Python, PythonLauncher performs this task.</source>
        </trans-unit><trans-unit id="195" translate="yes" xml:space="preserve">
          <source>Each individual worker account is restricted to its own folder, and cannot access files in folders above its own level.</source>
        </trans-unit><trans-unit id="196" translate="yes" xml:space="preserve">
          <source>However, the worker account can read, write, or delete children under the session working folder that was created.</source>
        </trans-unit><trans-unit id="197" translate="yes" xml:space="preserve">
          <source>If you are an administrator on the computer, you can view the directories created for each process.</source>
        </trans-unit><trans-unit id="198" translate="yes" xml:space="preserve">
          <source>Each directory is identified by its session GUID.</source>
        </trans-unit><trans-unit id="199" translate="yes" xml:space="preserve">
          <source>Implied authentication (loop back requests)</source>
        </trans-unit><trans-unit id="200" translate="yes" xml:space="preserve">
          <source><bpt id="p1">*</bpt>Implied authentication<ept id="p1">*</ept> describes connection request behavior under which external processes running as low-privilege worker accounts are presented as a trusted user identity to SQL Server on loop back requests for data or operations.</source>
        </trans-unit><trans-unit id="201" translate="yes" xml:space="preserve">
          <source>As a concept, implied authentication is unique to Windows authentication, in SQL Server connection strings specifying a trusted connection, on requests originating from external processes such as R or Python script.</source>
        </trans-unit><trans-unit id="202" translate="yes" xml:space="preserve">
          <source>It is sometimes also referred to as a <bpt id="p1">*</bpt>loop back<ept id="p1">*</ept>.</source>
        </trans-unit><trans-unit id="203" translate="yes" xml:space="preserve">
          <source>Trusted connections are workable from R and Python script, but only with additional configuration.</source>
        </trans-unit><trans-unit id="204" translate="yes" xml:space="preserve">
          <source>In the extensibility architecture, R and Python processes run under worker accounts, inheriting permissions from the parent <bpt id="p1">**</bpt>SQLRUserGroup<ept id="p1">**</ept>.</source>
        </trans-unit><trans-unit id="205" translate="yes" xml:space="preserve">
          <source>When a connection string specifies <ph id="ph1">`Trusted_Connection=True`</ph>, the identity of the worker account is presented on the connection request, which is unknown by default to SQL Server.</source>
        </trans-unit><trans-unit id="206" translate="yes" xml:space="preserve">
          <source>To make trusted connections successful, you must create a database login for the <bpt id="p1">**</bpt>SQLRUserGroup<ept id="p1">**</ept>.</source>
        </trans-unit><trans-unit id="207" translate="yes" xml:space="preserve">
          <source>After doing so, any trusted connection from any member of <bpt id="p1">**</bpt>SQLRUserGroup<ept id="p1">**</ept> has login rights to SQL Server.</source>
        </trans-unit><trans-unit id="208" translate="yes" xml:space="preserve">
          <source>For step-by-step instructions, see <bpt id="p1">[</bpt>Add SQLRUserGroup to a database login<ept id="p1">](../../advanced-analytics/security/create-a-login-for-sqlrusergroup.md)</ept>.</source>
        </trans-unit><trans-unit id="209" translate="yes" xml:space="preserve">
          <source>Trusted connections are not the most widely used formulation of a connection request.</source>
        </trans-unit><trans-unit id="210" translate="yes" xml:space="preserve">
          <source>When R or Python script specifies a connection, it can be more common to use a SQL login, or a fully-specified user name and password if the connection is to an ODBC data source.</source>
        </trans-unit><trans-unit id="211" translate="yes" xml:space="preserve">
          <source>How implied authentication works for R and Python sessions</source>
        </trans-unit><trans-unit id="212" translate="yes" xml:space="preserve">
          <source>The following diagram shows the interaction of SQL Server components with the R runtime and how it does implied authentication for R.</source>
        </trans-unit><trans-unit id="213" translate="yes" xml:space="preserve">
          <source>Implied authentication for R</source>
        </trans-unit><trans-unit id="214" translate="yes" xml:space="preserve">
          <source>The next diagram shows the interaction of SQL Server components with the Python runtime and how it does implied authentication for Python.</source>
        </trans-unit><trans-unit id="215" translate="yes" xml:space="preserve">
          <source>Implied authentication for Python</source>
        </trans-unit><trans-unit id="216" translate="yes" xml:space="preserve">
          <source>No support for Transparent Data Encryption at rest</source>
        </trans-unit><trans-unit id="217" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>Transparent Data Encryption (TDE)<ept id="p1">](../../relational-databases/security/encryption/transparent-data-encryption.md)</ept> is not supported for data sent to or received from the external script runtime.</source>
        </trans-unit><trans-unit id="218" translate="yes" xml:space="preserve">
          <source>The reason is that the external process (R or Python) runs outside the SQL Server process.</source>
        </trans-unit><trans-unit id="219" translate="yes" xml:space="preserve">
          <source>Therefore, data used by the external runtime is not protected by the encryption features of the database engine.</source>
        </trans-unit><trans-unit id="220" translate="yes" xml:space="preserve">
          <source>This behavior is no different than any other client running on the SQL Server computer that reads data from the database and makes a copy.</source>
        </trans-unit><trans-unit id="221" translate="yes" xml:space="preserve">
          <source>As a consequence, TDE <bpt id="p1">**</bpt>is not<ept id="p1">**</ept> applied to any data that you use in R or Python scripts, or to any data saved to disk, or to any persisted intermediate results.</source>
        </trans-unit><trans-unit id="222" translate="yes" xml:space="preserve">
          <source>However, other types of encryption, such as Windows BitLocker encryption or third-party encryption applied at the file or folder level, still apply.</source>
        </trans-unit><trans-unit id="223" translate="yes" xml:space="preserve">
          <source>In the case of <bpt id="p1">[</bpt>Always Encrypted<ept id="p1">](../../relational-databases/security/encryption/overview-of-key-management-for-always-encrypted.md)</ept>, external runtimes do not have access to the encryption keys.</source>
        </trans-unit><trans-unit id="224" translate="yes" xml:space="preserve">
          <source>Therefore, data cannot be sent to the scripts.</source>
        </trans-unit><trans-unit id="225" translate="yes" xml:space="preserve">
          <source>Next steps</source>
        </trans-unit><trans-unit id="226" translate="yes" xml:space="preserve">
          <source>In this article, you learned the components and interaction model of the security architecture built into the <bpt id="p1">[</bpt>extensibility framework<ept id="p1">](../../advanced-analytics/concepts/extensibility-framework.md)</ept>.</source>
        </trans-unit><trans-unit id="227" translate="yes" xml:space="preserve">
          <source>Key points covered in this article include the purpose of Launchpad, SQLRUserGroup and worker accounts, process isolation of R and Python, and how user identities are mapped to worker accounts.</source>
        </trans-unit><trans-unit id="228" translate="yes" xml:space="preserve">
          <source>As a next step, review the instructions for <bpt id="p1">[</bpt>granting permissions<ept id="p1">](../../advanced-analytics/security/user-permission.md)</ept>.</source>
        </trans-unit><trans-unit id="229" translate="yes" xml:space="preserve">
          <source>For servers that use Windows authentication, you should also review <bpt id="p1">[</bpt>Add SQLRUserGroup to a database login<ept id="p1">](../../advanced-analytics/security/create-a-login-for-sqlrusergroup.md)</ept> to learn when additional configuration is required.</source>
        </trans-unit></group></body></file></xliff>