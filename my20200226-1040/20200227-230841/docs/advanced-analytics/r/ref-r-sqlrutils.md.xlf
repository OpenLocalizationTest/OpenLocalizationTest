<?xml version="1.0"?><xliff version="1.2" xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd"><file datatype="xml" original="ref-r-sqlrutils.md" source-language="en-US" target-language="en-US"><header><tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-0c45fb3" tool-company="Microsoft" /><xliffext:skl_file_name xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">9e8b99b7-5dd1-4f94-ba72-fb306822a13c3de8d438691afb7ebf1aabe15265227b7876b837.skl</xliffext:skl_file_name><xliffext:version xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1.2</xliffext:version><xliffext:ms.openlocfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">3de8d438691afb7ebf1aabe15265227b7876b837</xliffext:ms.openlocfilehash><xliffext:ms.sourcegitcommit xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">9e8b99b7-5dd1-4f94-ba72-fb306822a13c</xliffext:ms.sourcegitcommit><xliffext:ms.lasthandoff xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">02/27/2020</xliffext:ms.lasthandoff><xliffext:ms.openlocfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">docs\advanced-analytics\r\ref-r-sqlrutils.md</xliffext:ms.openlocfilepath></header><body><group id="content" extype="content"><trans-unit id="101" translate="yes" xml:space="preserve" restype="x-metadata">
          <source>sqlrutils helper functions</source>
        </trans-unit><trans-unit id="102" translate="yes" xml:space="preserve" restype="x-metadata">
          <source>Use the sqlrutils function library in SQL Server 2016 R Services and SQL Server Machine Learning Services with R to generate stored procedures containing R script.</source>
        </trans-unit><trans-unit id="103" translate="yes" xml:space="preserve">
          <source>sqlrutils (R library in SQL Server)</source>
        </trans-unit><trans-unit id="104" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">**</bpt>sqlrutils<ept id="p1">**</ept> package provides a mechanism for R users to put their R scripts into a T-SQL stored procedure, register that stored procedure with a database, and run the stored procedure from an R development environment.</source>
        </trans-unit><trans-unit id="105" translate="yes" xml:space="preserve">
          <source>By converting your R code to run within a single stored procedure, you can make more effective use of SQL Server R Services, which requires that R script be embedded as a parameter to <bpt id="p1">[</bpt>sp_execute_external_script<ept id="p1">](../../relational-databases/system-stored-procedures/sp-execute-external-script-transact-sql.md)</ept>.</source>
        </trans-unit><trans-unit id="106" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">**</bpt>sqlrutils<ept id="p1">**</ept> package helps you build this embedded R script and set related parameters appropriately.</source>
        </trans-unit><trans-unit id="107" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">**</bpt>sqlrutils<ept id="p1">**</ept> package performs these tasks:</source>
        </trans-unit><trans-unit id="108" translate="yes" xml:space="preserve">
          <source>Saves the generated T-SQL script as a string inside an R data structure</source>
        </trans-unit><trans-unit id="109" translate="yes" xml:space="preserve">
          <source>Optionally, generates a .sql file for the T-SQL script, which you can edit or run to create a stored procedure</source>
        </trans-unit><trans-unit id="110" translate="yes" xml:space="preserve">
          <source>Registers the newly created stored procedure with the SQL Server instance from your R development environment</source>
        </trans-unit><trans-unit id="111" translate="yes" xml:space="preserve">
          <source>You can also execute the stored procedure from an R environment, by passing well-formed parameters and processing the results.</source>
        </trans-unit><trans-unit id="112" translate="yes" xml:space="preserve">
          <source>Or, you can use the stored procedure from SQL Server to support common database integration scenarios such as ETL, model training, and high-volume scoring.</source>
        </trans-unit><trans-unit id="113" translate="yes" xml:space="preserve">
          <source>If you intend to run the stored procedure from an R environment by calling the <bpt id="p1">*</bpt>executeStoredProcedure<ept id="p1">*</ept> function, you must use an ODBC 3.8 provider, such as ODBC Driver 13 for SQL Server.</source>
        </trans-unit><trans-unit id="114" translate="yes" xml:space="preserve">
          <source>Full reference documentation</source>
        </trans-unit><trans-unit id="115" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">**</bpt>sqlrutils<ept id="p1">**</ept> library is distributed in multiple Microsoft products, but usage is the same whether you get the library in SQL Server or another product.</source>
        </trans-unit><trans-unit id="116" translate="yes" xml:space="preserve">
          <source>Because the functions are the same, <bpt id="p1">[</bpt>documentation for individual sqlrutils functions<ept id="p1">](https://docs.microsoft.com/machine-learning-server/r-reference/revoscaler/revoscaler)</ept> is published to just one location under the <bpt id="p2">[</bpt>R reference<ept id="p2">](https://docs.microsoft.com/machine-learning-server/r-reference/introducing-r-server-r-package-reference)</ept> for Microsoft Machine Learning Server.</source>
        </trans-unit><trans-unit id="117" translate="yes" xml:space="preserve">
          <source>Should any product-specific behaviors exist, discrepancies will be noted in the function help page.</source>
        </trans-unit><trans-unit id="118" translate="yes" xml:space="preserve">
          <source>Functions list</source>
        </trans-unit><trans-unit id="119" translate="yes" xml:space="preserve">
          <source>The following section provides an overview of the functions that you can call from the <bpt id="p1">**</bpt>sqlrutils<ept id="p1">**</ept> package to develop a stored procedure containing embedded R code.</source>
        </trans-unit><trans-unit id="120" translate="yes" xml:space="preserve">
          <source>For details of the parameters for each method or function, see the R help for the package: <ph id="ph1">`help(package="sqlrutils")`</ph></source>
        </trans-unit><trans-unit id="121" translate="yes" xml:space="preserve">
          <source>Function</source>
        </trans-unit><trans-unit id="122" translate="yes" xml:space="preserve">
          <source>Description</source>
        </trans-unit><trans-unit id="123" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>executeStoredProcedure<ept id="p1">](https://docs.microsoft.com/machine-learning-server/r-reference/sqlrutils/executestoredprocedure)</ept></source>
        </trans-unit><trans-unit id="124" translate="yes" xml:space="preserve">
          <source>Execute a SQL stored procedure.</source>
        </trans-unit><trans-unit id="125" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>getInputParameters<ept id="p1">](https://docs.microsoft.com/machine-learning-server/r-reference/sqlrutils/getinputparameters)</ept></source>
        </trans-unit><trans-unit id="126" translate="yes" xml:space="preserve">
          <source>Get a list of input parameters to the stored procedure.</source>
        </trans-unit><trans-unit id="127" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>InputData<ept id="p1">](https://docs.microsoft.com/machine-learning-server/r-reference/sqlrutils/inputdata)</ept></source>
        </trans-unit><trans-unit id="128" translate="yes" xml:space="preserve">
          <source>Defines the source of data in SQL Server that will be used in the R data frame.</source>
        </trans-unit><trans-unit id="129" translate="yes" xml:space="preserve">
          <source>You specify the name of the data.frame in which to store the input data, and a query to get the data, or a default value.</source>
        </trans-unit><trans-unit id="130" translate="yes" xml:space="preserve">
          <source>Only simple SELECT queries are supported.</source>
        </trans-unit><trans-unit id="131" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>InputParameter<ept id="p1">](https://docs.microsoft.com/machine-learning-server/r-reference/sqlrutils/inputparameter)</ept></source>
        </trans-unit><trans-unit id="132" translate="yes" xml:space="preserve">
          <source>Defines a single input parameter that will be embedded in the T-SQL script.</source>
        </trans-unit><trans-unit id="133" translate="yes" xml:space="preserve">
          <source>You must provide the name of the parameter and its R data type.</source>
        </trans-unit><trans-unit id="134" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>OutputData<ept id="p1">](https://docs.microsoft.com/machine-learning-server/r-reference/sqlrutils/outputdata)</ept></source>
        </trans-unit><trans-unit id="135" translate="yes" xml:space="preserve">
          <source>Generates an intermediate data object that is needed if your R function returns a list that contains a data.frame.</source>
        </trans-unit><trans-unit id="136" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">*</bpt>OutputData<ept id="p1">*</ept> object is used to store the name of a single data.frame obtained from the list.</source>
        </trans-unit><trans-unit id="137" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>OutputParameter<ept id="p1">](https://docs.microsoft.com/machine-learning-server/r-reference/sqlrutils/outputparameter)</ept></source>
        </trans-unit><trans-unit id="138" translate="yes" xml:space="preserve">
          <source>Generates an intermediate data object that is needed if your R function returns a list.</source>
        </trans-unit><trans-unit id="139" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">*</bpt>OutputParameter<ept id="p1">*</ept> object stores the name and data type of a single member of the list, assuming that member is <bpt id="p2">**</bpt>not<ept id="p2">**</ept> a data frame.</source>
        </trans-unit><trans-unit id="140" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>registerStoredProcedure<ept id="p1">](https://docs.microsoft.com/machine-learning-server/r-reference/sqlrutils/registerstoredprocedure)</ept></source>
        </trans-unit><trans-unit id="141" translate="yes" xml:space="preserve">
          <source>Register the stored procedure with a database.</source>
        </trans-unit><trans-unit id="142" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>setInputDataQuery<ept id="p1">](https://docs.microsoft.com/machine-learning-server/r-reference/sqlrutils/setinputdataquery)</ept></source>
        </trans-unit><trans-unit id="143" translate="yes" xml:space="preserve">
          <source>Assign a query to an input data parameter of the stored procedure.</source>
        </trans-unit><trans-unit id="144" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>setInputParameterValue<ept id="p1">](https://docs.microsoft.com/machine-learning-server/r-reference/sqlrutils/setinputparametervalue)</ept></source>
        </trans-unit><trans-unit id="145" translate="yes" xml:space="preserve">
          <source>Assign a value to an input parameter of the stored procedure.</source>
        </trans-unit><trans-unit id="146" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>StoredProcedure<ept id="p1">](https://docs.microsoft.com/machine-learning-server/r-reference/sqlrutils/storedprocedure)</ept></source>
        </trans-unit><trans-unit id="147" translate="yes" xml:space="preserve">
          <source>A stored procedure object.</source>
        </trans-unit><trans-unit id="148" translate="yes" xml:space="preserve">
          <source>How to use sqlrutils</source>
        </trans-unit><trans-unit id="149" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">**</bpt>sqlrutils<ept id="p1">**</ept> library functions must run on a computer having SQL Server Machine Learning with R. If you are working on a client workstation, set a remote compute context to shift execution to SQL Server.</source>
        </trans-unit><trans-unit id="150" translate="yes" xml:space="preserve">
          <source>The workflow for using this package includes the following steps:</source>
        </trans-unit><trans-unit id="151" translate="yes" xml:space="preserve">
          <source>Define stored procedure parameters (inputs, outputs, or both)</source>
        </trans-unit><trans-unit id="152" translate="yes" xml:space="preserve">
          <source>Generate and register the stored procedure</source>
        </trans-unit><trans-unit id="153" translate="yes" xml:space="preserve">
          <source>Execute the stored procedure</source>
        </trans-unit><trans-unit id="154" translate="yes" xml:space="preserve">
          <source>In an R session, load <bpt id="p1">**</bpt>sqlrutils<ept id="p1">**</ept> from the command line by typing <ph id="ph1">`library(sqlrutils)`</ph>.</source>
        </trans-unit><trans-unit id="155" translate="yes" xml:space="preserve">
          <source>You can load this library on computer that does not have SQL Server (for example, on an R Client instance) if you change the compute context to SQL Server and execute the code in that compute context.</source>
        </trans-unit><trans-unit id="156" translate="yes" xml:space="preserve">
          <source>Define stored procedure parameters and inputs</source>
        </trans-unit><trans-unit id="157" translate="yes" xml:space="preserve">
          <source><ph id="ph1">`StoredProcedure`</ph> is the main constructor used to build the stored procedure.</source>
        </trans-unit><trans-unit id="158" translate="yes" xml:space="preserve">
          <source>This constructor generates a <bpt id="p1">*</bpt>SQL Server Stored Procedure<ept id="p1">*</ept> object, and optionally creates a text file containing a query that can be used to generate the stored procedure using a T-SQL command.</source>
        </trans-unit><trans-unit id="159" translate="yes" xml:space="preserve">
          <source>Optionally, the <bpt id="p1">*</bpt>StoredProcedure<ept id="p1">*</ept> function can also register the stored procedure with the specified instance and database.</source>
        </trans-unit><trans-unit id="160" translate="yes" xml:space="preserve">
          <source>Use the <ph id="ph1">`func`</ph> argument to specify a valid R function.</source>
        </trans-unit><trans-unit id="161" translate="yes" xml:space="preserve">
          <source>All the variables that the function uses must be defined either inside the function or be provided as input parameters.</source>
        </trans-unit><trans-unit id="162" translate="yes" xml:space="preserve">
          <source>These parameters can include a maximum of one data frame.</source>
        </trans-unit><trans-unit id="163" translate="yes" xml:space="preserve">
          <source>The R function must return either a data frame, a named list, or a NULL.</source>
        </trans-unit><trans-unit id="164" translate="yes" xml:space="preserve">
          <source>If the function returns a list, the list can contain a maximum of one data.frame.</source>
        </trans-unit><trans-unit id="165" translate="yes" xml:space="preserve">
          <source>Use the argument <ph id="ph1">`spName`</ph> to specify the name of the stored procedure you want to create.</source>
        </trans-unit><trans-unit id="166" translate="yes" xml:space="preserve">
          <source>You can pass in optional input and output parameters, using the objects created by these helper functions: <ph id="ph1">`setInputData`</ph>, <ph id="ph2">`setInputParameter`</ph>, and <ph id="ph3">`setOutputParameter`</ph>.</source>
        </trans-unit><trans-unit id="167" translate="yes" xml:space="preserve">
          <source>Optionally, use <ph id="ph1">`filePath`</ph> to provide the path and name of a .sql file to create.</source>
        </trans-unit><trans-unit id="168" translate="yes" xml:space="preserve">
          <source>You can run this file on the SQL Server instance to generate the stored procedure using T-SQL.</source>
        </trans-unit><trans-unit id="169" translate="yes" xml:space="preserve">
          <source>To define the server and database where the stored procedure will be saved, use the arguments <ph id="ph1">`dbName`</ph> and  <ph id="ph2">`connectionString`</ph>.</source>
        </trans-unit><trans-unit id="170" translate="yes" xml:space="preserve">
          <source>To get a list of the <bpt id="p1">*</bpt>InputData<ept id="p1">*</ept> and <bpt id="p2">*</bpt>InputParameter<ept id="p2">*</ept> objects that were used to create a specific <bpt id="p3">*</bpt>StoredProcedure<ept id="p3">*</ept> object, call <ph id="ph1">`getInputParameters`</ph>.</source>
        </trans-unit><trans-unit id="171" translate="yes" xml:space="preserve">
          <source>To register the stored procedure with the specified database, use <ph id="ph1">`registerStoredProcedure`</ph>.</source>
        </trans-unit><trans-unit id="172" translate="yes" xml:space="preserve">
          <source>The stored procedure object typically does not have any data or values associated with it, unless a default value was specified.</source>
        </trans-unit><trans-unit id="173" translate="yes" xml:space="preserve">
          <source>Data is not retrieved until the stored procedure is executed.</source>
        </trans-unit><trans-unit id="174" translate="yes" xml:space="preserve">
          <source>Specify inputs and execute</source>
        </trans-unit><trans-unit id="175" translate="yes" xml:space="preserve">
          <source>Use <ph id="ph1">`setInputDataQuery`</ph> to assign a query to an <bpt id="p1">*</bpt>InputParameter<ept id="p1">*</ept> object.</source>
        </trans-unit><trans-unit id="176" translate="yes" xml:space="preserve">
          <source>For example, if you have created a stored procedure object in R, you can use <ph id="ph1">`setInputDataQuery`</ph> to pass arguments to the <bpt id="p1">*</bpt>StoredProcedure<ept id="p1">*</ept> function in order to execute the stored procedure with the desired inputs.</source>
        </trans-unit><trans-unit id="177" translate="yes" xml:space="preserve">
          <source>Use <ph id="ph1">`setInputValue`</ph> to assign specific values to a parameter stored as an <bpt id="p1">*</bpt>InputParameter<ept id="p1">*</ept> object.</source>
        </trans-unit><trans-unit id="178" translate="yes" xml:space="preserve">
          <source>You then pass the parameter object and its value assignment to the <bpt id="p1">*</bpt>StoredProcedure<ept id="p1">*</ept> function to execute the stored procedure with the set values.</source>
        </trans-unit><trans-unit id="179" translate="yes" xml:space="preserve">
          <source>Use <ph id="ph1">`executeStoredProcedure`</ph> to execute a stored procedure defined as an <bpt id="p1">*</bpt>StoredProcedure<ept id="p1">*</ept> object.</source>
        </trans-unit><trans-unit id="180" translate="yes" xml:space="preserve">
          <source>Call this function only when executing a stored procedure from R code.</source>
        </trans-unit><trans-unit id="181" translate="yes" xml:space="preserve">
          <source>Do not use it when running the stored procedure from SQL Server using T-SQL.</source>
        </trans-unit><trans-unit id="182" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">*</bpt>executeStoredProcedure<ept id="p1">*</ept> function requires an ODBC 3.8 provider, such as ODBC Driver 13 for SQL Server.</source>
        </trans-unit><trans-unit id="183" translate="yes" xml:space="preserve">
          <source>See also</source>
        </trans-unit><trans-unit id="184" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>How to create a stored procedure using sqlrutils<ept id="p1">](how-to-create-a-stored-procedure-using-sqlrutils.md)</ept></source>
        </trans-unit></group></body></file></xliff>